[
  {
    "id": "REQ001_POSITIVE_001",
    "title": "Verify REQ001 - Valid scenario",
    "description": "Test valid scenario for requirement REQ001",
    "test_type": "positive",
    "preconditions": [
      "System is ready",
      "Valid test data available"
    ],
    "test_steps": [
      "Prepare valid test data",
      "Execute the required functionality",
      "Verify expected behavior"
    ],
    "expected_result": "System behaves as specified",
    "priority": "High",
    "tags": [
      "functional",
      "positive",
      "traces_to_REQ001"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ002_POSITIVE_001",
    "title": "Verify REQ002 - Valid scenario",
    "description": "Test valid scenario for requirement REQ002",
    "test_type": "positive",
    "preconditions": [
      "System is ready",
      "Valid test data available"
    ],
    "test_steps": [
      "Prepare valid test data",
      "Execute the required functionality",
      "Verify expected behavior"
    ],
    "expected_result": "System behaves as specified",
    "priority": "High",
    "tags": [
      "functional",
      "positive",
      "traces_to_REQ002"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ003_POSITIVE_001",
    "title": "Verify REQ003 - Valid scenario",
    "description": "Test valid scenario for requirement REQ003",
    "test_type": "positive",
    "preconditions": [
      "System is ready",
      "Valid test data available"
    ],
    "test_steps": [
      "Prepare valid test data",
      "Execute the required functionality",
      "Verify expected behavior"
    ],
    "expected_result": "System behaves as specified",
    "priority": "High",
    "tags": [
      "functional",
      "positive",
      "traces_to_REQ003"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ004_POSITIVE_001",
    "title": "Verify REQ004 - Valid scenario",
    "description": "Test valid scenario for requirement REQ004",
    "test_type": "positive",
    "preconditions": [
      "System is ready",
      "Valid test data available"
    ],
    "test_steps": [
      "Prepare valid test data",
      "Execute the required functionality",
      "Verify expected behavior"
    ],
    "expected_result": "System behaves as specified",
    "priority": "High",
    "tags": [
      "functional",
      "positive",
      "traces_to_REQ004"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ005_POSITIVE_001",
    "title": "Verify REQ005 - Valid scenario",
    "description": "Test valid scenario for requirement REQ005",
    "test_type": "positive",
    "preconditions": [
      "System is ready",
      "Valid test data available"
    ],
    "test_steps": [
      "Prepare valid test data",
      "Execute the required functionality",
      "Verify expected behavior"
    ],
    "expected_result": "System behaves as specified",
    "priority": "High",
    "tags": [
      "functional",
      "positive",
      "traces_to_REQ005"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ001_NEGATIVE_001",
    "title": "Verify REQ001 - Invalid scenario",
    "description": "Test invalid scenario for requirement REQ001",
    "test_type": "negative",
    "preconditions": [
      "System is ready"
    ],
    "test_steps": [
      "Prepare invalid test data",
      "Attempt to execute functionality",
      "Verify error handling"
    ],
    "expected_result": "System handles error appropriately",
    "priority": "Medium",
    "tags": [
      "functional",
      "negative",
      "traces_to_REQ001"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ002_NEGATIVE_001",
    "title": "Verify REQ002 - Invalid scenario",
    "description": "Test invalid scenario for requirement REQ002",
    "test_type": "negative",
    "preconditions": [
      "System is ready"
    ],
    "test_steps": [
      "Prepare invalid test data",
      "Attempt to execute functionality",
      "Verify error handling"
    ],
    "expected_result": "System handles error appropriately",
    "priority": "Medium",
    "tags": [
      "functional",
      "negative",
      "traces_to_REQ002"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ003_NEGATIVE_001",
    "title": "Verify REQ003 - Invalid scenario",
    "description": "Test invalid scenario for requirement REQ003",
    "test_type": "negative",
    "preconditions": [
      "System is ready"
    ],
    "test_steps": [
      "Prepare invalid test data",
      "Attempt to execute functionality",
      "Verify error handling"
    ],
    "expected_result": "System handles error appropriately",
    "priority": "Medium",
    "tags": [
      "functional",
      "negative",
      "traces_to_REQ003"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ004_NEGATIVE_001",
    "title": "Verify REQ004 - Invalid scenario",
    "description": "Test invalid scenario for requirement REQ004",
    "test_type": "negative",
    "preconditions": [
      "System is ready"
    ],
    "test_steps": [
      "Prepare invalid test data",
      "Attempt to execute functionality",
      "Verify error handling"
    ],
    "expected_result": "System handles error appropriately",
    "priority": "Medium",
    "tags": [
      "functional",
      "negative",
      "traces_to_REQ004"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  },
  {
    "id": "REQ005_NEGATIVE_001",
    "title": "Verify REQ005 - Invalid scenario",
    "description": "Test invalid scenario for requirement REQ005",
    "test_type": "negative",
    "preconditions": [
      "System is ready"
    ],
    "test_steps": [
      "Prepare invalid test data",
      "Attempt to execute functionality",
      "Verify error handling"
    ],
    "expected_result": "System handles error appropriately",
    "priority": "Medium",
    "tags": [
      "functional",
      "negative",
      "traces_to_REQ005"
    ],
    "risk_level": "Medium",
    "automation_feasible": true
  }
]