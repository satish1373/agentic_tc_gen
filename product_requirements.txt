Functional testing user stories
Currency conversion
•	As a tester, the currency conversion between EUR and USD should be verified using real-time rates to ensure accurate conversions.
o	Acceptance criteria:
o	Given the source currency is EUR and the target currency is USD.
o	When an amount in EUR is entered, the corresponding USD amount is accurately displayed based on real-time exchange rates.
o	The conversion calculation correctly accounts for decimals and rounding.
•	As a tester, the currency conversion between USD and JPY should be verified for large amounts to ensure the application handles a wide range of values.
o	Acceptance criteria:
o	Given the source currency is USD and the target currency is JPY.
o	When a large amount (e.g., 10,000,000 USD) is entered, the corresponding JPY amount is accurately displayed.
o	The system handles the conversion of large numbers without errors or overflow issues.
•	As a tester, the currency conversion between two exotic currencies (e.g., Argentine Peso and Thai Baht) should be verified to ensure the application supports a broad range of currencies.
o	Acceptance criteria:
o	Given the source currency is ARS and the target currency is THB.
o	When an amount in ARS is entered, the corresponding THB amount is accurately displayed based on real-time rates.
o	The system correctly handles less common currency pairs.
Exchange rate updates
•	As a tester, the application should be verified to fetch and update exchange rates in real time so that users always have access to current information.
o	Acceptance criteria:
o	Given the application is connected to the internet.
o	When exchange rates are viewed, they are refreshed automatically at regular intervals.
o	The displayed rates match the data from the integrated API.
•	As a tester, the application should display a notification when offline, showing the last updated exchange rates so that users understand data currency.
o	Acceptance criteria:
o	Given the device is offline.
o	When the currency converter is accessed, the last fetched exchange rates are displayed.
o	A clear message indicates that the rates are not live and shows the timestamp of the last update.
Multi-currency conversion
•	As a tester, converting a single amount into multiple target currencies simultaneously should be verified to ensure users can quickly compare values across different currencies.
o	Acceptance criteria:
o	Given a source currency and an amount.
o	When multiple target currencies are selected for conversion, the application displays the converted amount for each selected currency.
o	The calculations for each conversion are accurate based on the current exchange rates.
Calculator functionality
•	As a tester, the in-app calculator should be verified to perform basic arithmetic operations (addition, subtraction, multiplication, division) on converted amounts so that users can manipulate values within the app.
o	Acceptance criteria:
o	Given a converted amount.
o	When an arithmetic operation (e.g., adding another value) is performed, the calculation is correct.
o	The results are displayed accurately with appropriate precision.
Performance testing user stories
•	As a user, the currency converter should load within 2 seconds to allow quick access to conversion functionality.
o	Acceptance criteria:
o	The initial loading time of the application is consistently below 2 seconds on various devices and network conditions.
•	As a user, real-time exchange rates should update without noticeable lag to ensure the accuracy of the displayed rates.
o	Acceptance criteria:
o	Exchange rate updates occur smoothly without freezing or slowing down the application's responsiveness.
o	The update mechanism does not consume excessive battery or network resources.
•	As a user, scrolling through the list of currencies should be smooth without any stutter or lag to easily find the currencies needed.
o	Acceptance criteria:
o	Scrolling through a long list of currencies is fluid and responsive on different device specifications.
Security testing user stories
•	As a user, the API key handling for exchange rate fetches should be secure to prevent unauthorized access to the API and potential data breaches.
o	Acceptance criteria:
o	The API key is securely stored and transmitted without being exposed in client-side code or network requests.
o	Measures are in place to prevent misuse or leakage of the API key.
•	As a user, the application should be protected from malicious input when entering amounts to prevent injection vulnerabilities or crashes.
o	Acceptance criteria:
o	The application validates and sanitizes all user input fields to prevent malicious code injection (e.g., cross-site scripting).
o	Entering special characters or unusually long strings does not crash the application.
Usability testing user stories
•	As a user, the selection of source and target currencies should be intuitive through a clear and easy-to-use interface to allow quick initiation of a conversion.
o	Acceptance criteria:
o	The currency selection mechanism (e.g., dropdowns, search functionality) is easily discoverable and usable.
o	Selecting currencies requires minimal taps or clicks.
•	As a user, it should be easy to distinguish between major and minor currencies to prioritize popular options and explore less common ones when needed.
o	Acceptance criteria:
o	The application visually separates or categorizes currencies to highlight major ones.
o	Search and filter options allow for efficient searching through a large number of currencies.
•	As a user, it should be easy to understand the meaning of symbols and abbreviations used for currencies to avoid confusion.
o	Acceptance criteria:
o	Currency symbols and abbreviations are consistently used and displayed prominently.
o	Tooltip or information icons provide explanations for less common symbols/abbreviations.
UI/UX testing user stories
•	As a user, the app's overall design should be clean, modern, and visually appealing to enjoy using it.
o	Acceptance criteria:
o	The UI elements are consistently styled and aligned.
o	The color scheme and typography enhance readability and visual appeal.
•	As a user, the input field for the amount should be clearly visible and easy to interact with to easily enter the desired conversion amount.
o	Acceptance criteria:
o	The input field is prominent on the screen.
o	The keyboard automatically appears when the input field is tapped.
•	As a user, error messages and warnings (e.g., for invalid input) should be clear and informative to easily understand and resolve issues.
o	Acceptance criteria:
o	Error messages are displayed in a noticeable and readable format.
o	The messages accurately describe the problem and provide guidance on how to resolve it.
•	As a user, the application should offer a dark mode option to use the app comfortably in low-light conditions.
o	Acceptance criteria:
o	The application seamlessly switches between light and dark modes when the system setting changes.
o	All UI elements are appropriately adjusted for readability in dark mode.
Integration testing user stories
•	As a tester, the application should be verified to successfully integrate with the chosen currency converter API for fetching real-time exchange rates so that the application functions as expected.
o	Acceptance criteria:
o	The application makes successful API calls to retrieve exchange rates.
o	The data received from the API is correctly parsed and displayed within the application.
o	API errors (e.g., rate limits, invalid API key) are handled gracefully and communicated to the user (if appropriate).
•	As a tester, the application should be verified to correctly handle various API responses (success, error, no data) so that it remains stable under different conditions.
o	Acceptance criteria:
o	The application behaves appropriately when the API returns valid data, an error message, or an empty response.
o	No crashes or unexpected behavior occur when the API provides different response types.
•	As a tester, the application should be verified to maintain data integrity during API calls and subsequent processing so that displayed information is consistent and reliable.
o	Acceptance criteria:
o	Exchange rate values fetched from the API are not corrupted or altered during transmission or processing within the application.
o	The displayed rates accurately reflect the raw data received from the API.
